// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.fovea1959.simple.subsystems;

import org.usfirst.fovea1959.simple.OI;
import org.usfirst.fovea1959.simple.Robot;
import org.usfirst.fovea1959.simple.RobotMap;
import org.usfirst.fovea1959.simple.commands.*;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveSubsystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController speedController0 = RobotMap.driveSubsystemSpeedController0;
    SpeedController speedController1 = RobotMap.driveSubsystemSpeedController1;
    SpeedController speedController2 = RobotMap.driveSubsystemSpeedController2;
    SpeedController speedController3 = RobotMap.driveSubsystemSpeedController3;
    RobotDrive robotDrive = RobotMap.driveSubsystemRobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void mechanumDrive() {
    	double x = Robot.oi.driverJoystick.getX();
    	double y = Robot.oi.driverJoystick.getY();
    	double twist = Robot.oi.driverJoystick.getTwist();
    	robotDrive.mecanumDrive_Cartesian(x, y, twist, 0);
    }
    
    public void moveForward(double speed) {
    	robotDrive.mecanumDrive_Cartesian(0, -speed, 0, 0);
    }
    
    public void stop() {
    	robotDrive.stopMotor();
    }
}

